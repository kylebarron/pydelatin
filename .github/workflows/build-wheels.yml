name: Build Wheels

# Only run on new tags starting with `v`
on: push
  # push:
  #   tags:
  #     - 'v*'

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v2

    - name: set environment variables
      uses: allenevans/set-env@v1.1.0
      with:
        # Only build on CPython
        # PyPy on macos seems to be failing; see https://github.com/joerick/cibuildwheel/issues/402
        CIBW_BUILD: "cp36-* cp37-* cp38-* cp39-*"
        CIBW_BEFORE_BUILD_MACOS: python -m pip install numpy Cython pybind11 && brew install glm
        CIBW_BEFORE_ALL_LINUX: curl -sL https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip > glm.zip && unzip -q glm.zip && cp -r glm/glm/ /usr/include/
        CIBW_BEFORE_BUILD_WINDOWS: curl -sL https://github.com/g-truc/glm/releases/download/0.9.9.8/glm-0.9.9.8.zip > glm.zip && unzip -q glm.zip
        # CIBW_ENVIRONMENT_WINDOWS: "PIP_GLOBAL_OPTION=\"/I%GITHUB_WORKSPACE%\\glm\\glm\""
        CIBW_ENVIRONMENT_WINDOWS: "PYDELATIN_INCLUDE_DIRS=./glm/glm"

    - uses: actions/setup-python@v1
      name: Install Python
      with:
        python-version: '3.7'

    - name: Install cibuildwheel
      run: |
        python -m pip install cibuildwheel==1.6.1

    - name: Install Visual C++ for Python 2.7
      if: startsWith(matrix.os, 'windows')
      run: |
        choco install vcpython27 -f -y

    - name: Build wheel
      run: |
        python -m cibuildwheel --output-dir wheelhouse

    - uses: actions/upload-artifact@v2
      with:
        path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build sdist
        run: python setup.py sdist

      - uses: actions/upload-artifact@v2
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag starting with 'v'
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    # alternatively, to publish when a GitHub Release is created, use the following rule:
    # if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: artifact
          path: dist

      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          # To test: repository_url: https://test.pypi.org/legacy/
